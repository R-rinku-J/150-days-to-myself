𝐋𝐞𝐞𝐭𝐂𝐨𝐝𝐞 : 𝟐𝟔𝟖𝟒. 𝐌𝐚𝐱𝐢𝐦𝐮𝐦 𝐍𝐮𝐦𝐛𝐞𝐫 𝐨𝐟 𝐌𝐨𝐯𝐞𝐬 𝐢𝐧 𝐚 𝐆𝐫𝐢𝐝
class Solution:
    def maxMoves(self, grid: List[List[int]]) -> int:
        m = len(grid)
        n = len(grid[0])
        res = 0
        dp = [0] * m
        
        for j in range(1, n):
            leftTop = 0
            found = False
            
            for i in range(m):
                curr = -1
                nxtLeftTop = dp[i]
                
                if i - 1 >= 0 and leftTop != -1 and grid[i][j] > grid[i-1][j-1]:
                    curr = max(curr, leftTop + 1)
                
                if dp[i] != -1 and grid[i][j] > grid[i][j-1]:
                    curr = max(curr, dp[i] + 1)
                
                if i + 1 < m and dp[i+1] != -1 and grid[i][j] > grid[i+1][j-1]:
                    curr = max(curr, dp[i+1] + 1)
                
                dp[i] = curr
                found = found or (dp[i] != -1)
                leftTop = nxtLeftTop
            
            if not found:
                break
            res = j
        
        return res
