𝐋𝐞𝐞𝐭𝐂𝐨𝐝𝐞 : 𝟏𝟑𝟏𝟎. 𝐗𝐎𝐑 𝐐𝐮𝐞𝐫𝐢𝐞𝐬 𝐨𝐟 𝐚 𝐒𝐮𝐛𝐚𝐫𝐫𝐚𝐲
class Solution:
    def xorQueries(self, arr: List[int], queries: List[List[int]]) -> List[int]:
        res = []
        prefix = [0]
        for i in arr:
            prefix.append(prefix[-1] ^ i)
        for a, b in queries:
            res.append(prefix[b+1] ^ prefix[a])
        return res


𝐂𝐨𝐝𝐞𝐂𝐡𝐞𝐟 : 𝐀𝐓𝐌 𝐌𝐚𝐜𝐡𝐢𝐧𝐞
for _ in range(int(input())):
    n, k = map(int, input().split())
    A = list(input().split())
    for i in range(n):
        A[i] = int(A[i])
    res = ""
    for i in range(n):
        if (A[i] <= k):
            res += "1"
            k -= A[i]
        else:
            res += '0'
    print(res)


𝐆𝐞𝐞𝐤𝐬𝐟𝐨𝐫𝐠𝐞𝐞𝐤𝐬 : 𝐌𝐢𝐫𝐫𝐨𝐫 𝐓𝐫𝐞𝐞
class Solution:
    #Function to convert a binary tree into its mirror tree.
    def mirror(self,root):
        # Code here
        if root is None:
            return None
        left_side = self.mirror(root.left)
        right_side = self.mirror(root.right)
        root.left = right_side
        root.right = left_side
        return root


𝐂𝐨𝐝𝐞𝐅𝐨𝐫𝐜𝐞𝐬 : 𝟐𝟎𝟎𝟒𝐀 - 𝐂𝐥𝐨𝐬𝐞𝐬𝐭 𝐏𝐨𝐢𝐧𝐭
t = int(input())
for _ in range(t):
    n = int(input())
    arr = list(map(int, input().split())) 
    if n == 2 and (arr[1] - arr[0] > 1 or arr[1] - arr[0] < -1):
        print("YES")
    else:
        print("NO")
