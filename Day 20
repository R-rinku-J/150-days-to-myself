𝐋𝐞𝐞𝐭𝐂𝐨𝐝𝐞 : 𝟏𝟑𝟑𝟏. 𝐑𝐚𝐧𝐤 𝐓𝐫𝐚𝐧𝐬𝐟𝐨𝐫𝐦 𝐨𝐟 𝐚𝐧 𝐀𝐫𝐫𝐚𝐲
class Solution:
    def arrayRankTransform(self, arr: List[int]) -> List[int]:
        res = []
        x = sorted(set(arr))
        dict1 = {}
        for i in range(len(x)):
            dict1[x[i]] = i + 1
        for j in arr:
            y = dict1[j]
            res.append(y)
        return res


𝐂𝐨𝐝𝐞𝐂𝐡𝐞𝐟 : 𝐓𝐚𝐧𝐮 𝐚𝐧𝐝 𝐇𝐞𝐚𝐝-𝐛𝐨𝐛
# cook your dish here
t = int(input())
for i in range(t):
    s = int(input())
    a = input()
    if ('I' in a):
        print('Indian')
    elif ('Y' in a):
        print('Not Indian')
    else:
        print("Not Sure")

𝐂𝐨𝐝𝐞𝐂𝐡𝐞𝐟 : 𝐏𝐬𝐞𝐮𝐝𝐨 𝐒𝐨𝐫𝐭𝐞𝐝 𝐀𝐫𝐫𝐚𝐲
for i in range(int(input())):
    a=int(input())
    b=list(map(int,input().split()))
    c=0
    for j in range(len(b)-1):
        if b[j]>b[j+1]:
            b[j+1],b[j]=b[j],b[j+1]
            break
    if b!=sorted(b):
        print("NO")  
    else:
        print("YES")


𝐆𝐞𝐞𝐤𝐬𝐅𝐨𝐫𝐆𝐞𝐞𝐤𝐬 : 𝐑𝐨𝐭𝐚𝐭𝐞 𝐚𝐧𝐝 𝐝𝐞𝐥𝐞𝐭𝐞
class Solution:
    def rotateDelete(self,  arr):
        # code here
        n = len(arr)
        for i in range(1, n//2 + 1):
            arr.insert(0, arr.pop())
            arr.pop(-i)
        return arr[0]

𝐆𝐞𝐞𝐤𝐬𝐅𝐨𝐫𝐆𝐞𝐞𝐤𝐬 : 𝐅𝐢𝐧𝐝 𝐭𝐫𝐢𝐩𝐥𝐞𝐭𝐬 𝐰𝐢𝐭𝐡 𝐳𝐞𝐫𝐨 𝐬𝐮𝐦
class Solution:
    #Function to find triplets with zero sum.    
    def findTriplets(self, arr, n):
        #code here
        arr.sort()
        for i in range(0, n):
            l = i+1
            r = n-1
            while(l < r):
                total = arr[i]+arr[l]+arr[r]
                if total == 0:
                    return True
                elif total < 0:
                    l += 1
                else:
                    r -= 1
        return False


𝐈𝐧𝐭𝐞𝐫𝐯𝐢𝐞𝐰𝐁𝐢𝐭 : 𝐁𝐚𝐥𝐚𝐧𝐜𝐞𝐝 𝐏𝐚𝐫𝐚𝐧𝐭𝐡𝐞𝐬𝐞𝐬!
class Solution:
    # @param A : string
    # @return an integer
    def solve(self, x):
        if len (x)%2!=0:
            return 0
        else:
            a=[]
            for i in x:
                if i == "(":
                    a.append(')')
                elif a and a[-1] == i:
                    a.pop()
                else:
                    return 0
            if not a:
                return 1
            else:
                return 0
𝐆𝐞𝐞𝐤𝐬𝐅𝐨𝐫𝐆𝐞𝐞𝐤𝐬 : 𝐏𝐨𝐰𝐞𝐫 𝐎𝐟 𝐍𝐮𝐦𝐛𝐞𝐫𝐬
import math
class Solution:
    def power(self,N,R):
        return pow(N, R, 1000000007)
